name: Release

on:
  push:
    tags:
        - v*

jobs:

  build:
    name: Build ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            ext: ""
            archive: tar.gz
            name: linux-amd64
          - goos: linux
            goarch: arm64
            ext: ""
            archive: tar.gz
            name: linux-arm64
          - goos: darwin
            goarch: amd64
            ext: ""
            archive: zip
            name: macos-intel
          - goos: darwin
            goarch: arm64
            ext: ""
            archive: zip
            name: macos-arm64
          - goos: windows
            goarch: amd64
            ext: .exe
            archive: zip
            name: win64
          - goos: windows
            goarch: arm64
            ext: .exe
            archive: zip
            name: win-arm64
    steps:
      - name: Set up Go 1.23.1
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.1

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - run: echo "VERSION=`echo $(git describe --tags)`" >> $GITHUB_ENV

      - name: Build binary
        run: GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -ldflags "-X 'github.com/juruen/rmapi/version.Version=${{ env.VERSION }}'" -o rmapi${{ matrix.ext }} .

      - name: Create archive
        run: |
          if [ "${{ matrix.archive }}" = "tar.gz" ]; then
            tar czvf rmapi-${{ matrix.name }}.tar.gz rmapi${{ matrix.ext }}
          else
            zip rmapi-${{ matrix.name }}.zip rmapi${{ matrix.ext }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rmapi-${{ matrix.name }}
          path: rmapi-${{ matrix.name }}.${{ matrix.archive }}

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: List downloaded files
        run: find . -name "rmapi-*" -type f

      - name: Release
        uses: docker://softprops/action-gh-release
        with:
          files: "*/rmapi-*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
